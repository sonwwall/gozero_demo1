// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: user.proto

package useraction

import (
	"context"

	"gozero_demo1/rpc_study/user_group/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserCreateRequest  = user.UserCreateRequest
	UserCreateResponse = user.UserCreateResponse
	UserInfoRequest    = user.UserInfoRequest
	UserInfoResponse   = user.UserInfoResponse

	UserAction interface {
		UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error)
	}

	defaultUserAction struct {
		cli zrpc.Client
	}
)

func NewUserAction(cli zrpc.Client) UserAction {
	return &defaultUserAction{
		cli: cli,
	}
}

func (m *defaultUserAction) UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error) {
	client := user.NewUserActionClient(m.cli.Conn())
	return client.UserCreate(ctx, in, opts...)
}
